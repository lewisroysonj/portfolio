name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  AWS_ROLE: arn:aws:iam::596051128564:role/rl_portfolio_github_actions
  CONTAINER_REGISTRY_URL: 596051128564.dkr.ecr.ap-south-1.amazonaws.com
  ECS_SERVICE: rl_portfolio
  ECS_CLUSTER: rl_portfolio
  ECS_TASK_DEFINITION: .github/workflows/task-definition.json

permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo
  
jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 3000
          aws-region: ${{ env.AWS_REGION }}

      - name: Retrieve AWS Auth Token for ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.CONTAINER_REGISTRY_URL }}
          
      - name: Build Images
        run: |
          echo DB_PASSWORD=${{ secrets.RL_PORTFOLIO_DB_PROD_PASSWORD }} >> ./backend/src/config/parameters/production.env
          make build-production
          docker images
      
      - name: Tag Images
        run: |
          docker tag rl_portfolio_backend:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_backend:latest
          docker tag rl_portfolio_frontend:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_frontend:latest
          docker tag rl_portfolio_reverse-proxy:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_reverse_proxy:latest

      - name: Push Images
        run: |
          docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_backend:latest
          docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_frontend:latest
          docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_reverse_proxy:latest
      
      - name: Bundle Frontend Project
        run: |
          ls
          make up-production
          make ceck-env
          make migration-run
          make ceck-env
          make bundle-frontend

          ls -a
          cd frontend
          ls -a
  
