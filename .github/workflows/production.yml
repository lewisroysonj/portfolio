name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  AWS_ROLE: arn:aws:iam::596051128564:role/rl_portfolio_github_actions
  CONTAINER_REGISTRY_URL: 596051128564.dkr.ecr.ap-south-1.amazonaws.com
  AWS_S3_BUCKET_NAME: rl-portfolio
  AWS_EC2_PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
  AWS_EC2_HOSTNAME: ${{ secrets.AWS_EC2_HOSTNAME }}
  AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME }}

permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo
  
jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 3000
          aws-region: ${{ env.AWS_REGION }}

      - name: Retrieve AWS Auth Token for ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.CONTAINER_REGISTRY_URL }}
      
      - name: Pass Secret Envs
        run: |
          echo DB_PASSWORD=${{ secrets.RL_PORTFOLIO_DB_PROD_PASSWORD }} >> ./backend/src/config/parameters/production.env

      # - name: Build Images
      #   run: |
      #     make build-production
      #     docker images
      
      # - name: Tag Images
      #   run: |
      #     docker tag rl_portfolio_backend:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_backend:latest
      #     docker tag rl_portfolio_frontend:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_frontend:latest
      #     docker tag rl_portfolio_reverse-proxy:latest ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_reverse_proxy:latest

      # - name: Push Images
      #   run: |
      #     docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_backend:latest
      #     docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_frontend:latest
      #     docker push ${{ env.CONTAINER_REGISTRY_URL }}/rl_portfolio_reverse_proxy:latest
      
      # - name: Bundle Frontend Project
      #   run: |
      #     ls
      #     make up-production
      #     make migration-run
      #     make bundle-frontend

      # - name: Push Bundled Project Folder to S3 Bucket
      #   run: |
      #     ls -a
      #     aws s3 cp frontend/.next s3://${{ env.AWS_S3_BUCKET_NAME }}/.next --recursive

      - name: SSH into EC2 Instance and Run Deployment Script
        run: |
          echo "$AWS_EC2_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_EC2_USERNAME}@${AWS_EC2_HOSTNAME} '
            # sudo rm -rf rl_portfolio &&
            # git clone git@github.com:royson-lewis/rl_portfolio.git &&
            # cd rl_portfolio &&
            # git checkout main &&
            # aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.CONTAINER_REGISTRY_URL }} &&
            # make destroy &&
            # make up-production &&
            # ls -a &&
            # sudo aws s3 cp s3://${{ env.AWS_S3_BUCKET_NAME }}/.next ./frontend/.next --recursive &&
            # cd frontend && ls -a &&
            # cd ../ &&
            # make serve-frontend
            cd rl_portfolio &&
            git pull origin main &&
            sudo rm /etc/systemd/system/startup.service && 
            sudo cp deployment/config/startup.service /etc/systemd/system/startup.service &&
            sudo systemctl daemon-reload &&
            sudo systemctl enable startup.service &&
            sudo systemctl status nginx
          '



      